version: '3.8'

services:
  # MySQL数据库服务
  mysql:
    image: mysql:8.0
    container_name: crm_mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: root123
      MYSQL_DATABASE: crm_database
      MYSQL_USER: crm_user
      MYSQL_PASSWORD: crm_password
      MYSQL_CHARACTER_SET_SERVER: utf8mb4
      MYSQL_COLLATION_SERVER: utf8mb4_unicode_ci
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - crm_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # Redis缓存服务（可选）
  redis:
    image: redis:7-alpine
    container_name: crm_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - crm_network
    command: redis-server --appendonly yes

  # CRM后端服务
  backend:
    build: .
    container_name: crm_backend
    restart: unless-stopped
    environment:
      - FLASK_ENV=production
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_USER=crm_user
      - DB_PASSWORD=crm_password
      - DB_NAME=crm_database
      - REDIS_URL=redis://redis:6379/0
      - JWT_SECRET_KEY=your-production-jwt-secret-key
      - SECRET_KEY=your-production-secret-key
    ports:
      - "5000:5000"
    volumes:
      - ./logs:/app/logs
      - ./uploads:/app/uploads
      - ./backups:/app/backups
    networks:
      - crm_network
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_started
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nginx反向代理服务
  nginx:
    image: nginx:alpine
    container_name: crm_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./frontend:/usr/share/nginx/html
      - ./ssl:/etc/nginx/ssl
    networks:
      - crm_network
    depends_on:
      - backend

# 数据卷
volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local

# 网络
networks:
  crm_network:
    driver: bridge